-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\pwm\pwm_mbd.vhd
-- Created: 2018-03-14 12:40:53
-- 
-- Generated by MATLAB 9.2 and HDL Coder 3.10
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: pwm_mbd
-- Source Path: pwm/pwm_mbd
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY pwm_mbd IS
  PORT( clk                               :   IN    std_logic;
        reset_n                           :   IN    std_logic;
        ena                               :   IN    std_logic; 
        period                            :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        duty                              :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        pwm                               :   OUT   std_logic
        );
END pwm_mbd;


ARCHITECTURE rtl OF pwm_mbd IS

  -- Signals
  signal en_1bit                          : std_logic;
  SIGNAL period_unsigned                  : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL slope1_out1                      : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL slope1_out1_dtc                  : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL slope_out1                       : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Sum_out1                         : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL Relational_Operator_relop1       : std_logic;
  SIGNAL Switch_out1                      : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL Unit_Delay_out1                  : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL Sum_add_temp                     : unsigned(27 DOWNTO 0);  -- ufix28
  SIGNAL duty_unsigned                    : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL en_unsigned                      : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Relational_Operator1_relop1      : std_logic;
  SIGNAL Constant_out1                    : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Relational_Operator2_relop1      : std_logic;
  SIGNAL Logical_Operator_out1            : std_logic;

BEGIN
  period_unsigned <= unsigned(period);

  slope1_out1 <= to_unsigned(16#000#, 10);

  slope1_out1_dtc <= resize(slope1_out1, 27);

  slope_out1 <= to_unsigned(16#001#, 10);

  
  Relational_Operator_relop1 <= '1' WHEN resize(Sum_out1, 32) /= period_unsigned ELSE
      '0';

  
  Switch_out1 <= slope1_out1_dtc WHEN Relational_Operator_relop1 = '0' ELSE
      Sum_out1;

 --en_1bit <= enb(0);
 
  Unit_Delay_process : PROCESS (clk, reset_n)
  BEGIN
    IF reset_n = '0' THEN
      Unit_Delay_out1 <= to_unsigned(16#0000000#, 27);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF ena = '1' THEN
        Unit_Delay_out1 <= Switch_out1;
      END IF;
    END IF;
  END PROCESS Unit_Delay_process;


  Sum_add_temp <= resize(Unit_Delay_out1, 28) + resize(slope_out1, 28);
  
  Sum_out1 <= "111111111111111111111111111" WHEN Sum_add_temp(27) /= '0' ELSE
      Sum_add_temp(26 DOWNTO 0);
      
Process(ena, duty)
begin
  IF ena = '1' then
    duty_unsigned <= unsigned(duty);
  else 
    duty_unsigned <= (others => '0');
  end if;
end process;
  --en_unsigned <= unsigned(en);

  
  Relational_Operator1_relop1 <= '1' WHEN resize(Sum_out1, 32) <= duty_unsigned ELSE
      '0';

  Constant_out1 <= to_unsigned(1, 32);

  
  Relational_Operator2_relop1 <= '1';

  Logical_Operator_out1 <= Relational_Operator1_relop1 AND Relational_Operator2_relop1;


  pwm <= Logical_Operator_out1 and ena;

END rtl;

